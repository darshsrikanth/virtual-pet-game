
package forms;

import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.AbstractAction;
import java.awt.event.ActionEvent;
import java.util.Timer;
import java.util.TimerTask;
import classes.*;


public class petPreviewScreen extends javax.swing.JFrame {
    private String selectedPet;
    private saveManager manager;
    private int saveSlot;
    /**
     * Creates new form mainGameScreen
     */
    public petPreviewScreen() {
        initComponents();
        descriptionText.setEditable(false);
        descriptionText.setWrapStyleWord(true);
        
    }
    
    
    public petPreviewScreen(saveManager manager, String petType, int saveSlot) {
        initComponents();
        this.selectedPet = petType;
        this.manager = manager;
        this.saveSlot = saveSlot;
        displayPetInfo();
        descriptionText.setEditable(false);
        descriptionText.setWrapStyleWord(true);
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escapePressed");
        this.getRootPane().getActionMap().put("escapePressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                exitMainMenuMouseClicked(null);
            }
        });
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_X, 0), "cancelPressed");
        this.getRootPane().getActionMap().put("cancelPressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cancelPanelMouseClicked(null);
            }
        });
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_Y, 0), "confirmPressed");
        this.getRootPane().getActionMap().put("confirmPressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                confirmPanelMouseClicked(null);
            }
        });
        
    }
    
    
        // method to switch between displayed pet given choice made on selectPetType
    private void displayPetInfo() {
    switch (selectedPet) {
        case "pufferfish" -> {
            petPreviewImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pufferfishPreview.png")));
            descriptionText.setText("The pufferfish might look like it wouldn't be\nreceptive to a cuddle, but so long as you \ntreat them right you'd be proven wrong.\n\nThese cuties love carrots! Be warned though!\nThese charming animals tend to get sadder\nmore quickly than the others. Fear not! So \nlong as you keep your pet happy with gifts,\nyou won't get any spikes!");
            }

        case "axolotl" -> {
            petPreviewImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/axolotlPreview.png")));
            descriptionText.setText("Don’t be fooled by their derpy little faces—\nthese axolotls are bundles of joy that just\nwant to chill and munch on shrimp.\n\nThey're a bit more prone to getting sleepy\nthan their fellow pets, so make sure to let\nthem nap often! Treat them right and you’ll\nhave a friend who’s always ready to vibe.");
            }

        case "shark" -> {
            petPreviewImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sharkPreview.png")));
            descriptionText.setText("These sleek swimmers may look intimidating,\nbut deep down they’re total softies—\nas long as they’re well fed.\n\nSharks adore a fresh bite of fish and tend\nto get the munchies more often than the\nothers. Keep their belly full and you’ll earn\ntheir toothy grin and trust in no time.");
            }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        border = new javax.swing.JPanel();
        exitFrame = new javax.swing.JPanel();
        exitMainMenu = new javax.swing.JLabel();
        confirmPanel = new javax.swing.JPanel();
        confirmSelectionButton = new javax.swing.JLabel();
        cancelPanel = new javax.swing.JPanel();
        cancelSelectionButton = new javax.swing.JLabel();
        petPreviewText = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();
        previewImagePanel = new javax.swing.JPanel();
        petPreviewImage = new javax.swing.JLabel();
        backgroundEffects = new forms.backgroundEffects();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("frame");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        border.setBackground(new java.awt.Color(204, 204, 204));
        border.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        border.setName("border"); // NOI18N
        border.setOpaque(false);

        exitFrame.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));
        exitFrame.setPreferredSize(new java.awt.Dimension(72, 32));

        exitMainMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exitButton.png"))); // NOI18N
        exitMainMenu.setName("exitMainMenu"); // NOI18N
        exitMainMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMainMenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout exitFrameLayout = new javax.swing.GroupLayout(exitFrame);
        exitFrame.setLayout(exitFrameLayout);
        exitFrameLayout.setHorizontalGroup(
            exitFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitMainMenu)
        );
        exitFrameLayout.setVerticalGroup(
            exitFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitMainMenu)
        );

        confirmPanel.setBackground(new java.awt.Color(229, 145, 214));
        confirmPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(179, 96, 164), 4));
        confirmPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmPanel.setPreferredSize(new java.awt.Dimension(160, 60));
        confirmPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmPanelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                confirmPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                confirmPanelMouseReleased(evt);
            }
        });

        confirmSelectionButton.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        confirmSelectionButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmSelectionButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        confirmSelectionButton.setText("Confirm Selection");
        confirmSelectionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        confirmSelectionButton.setPreferredSize(new java.awt.Dimension(160, 60));

        javax.swing.GroupLayout confirmPanelLayout = new javax.swing.GroupLayout(confirmPanel);
        confirmPanel.setLayout(confirmPanelLayout);
        confirmPanelLayout.setHorizontalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(confirmSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        confirmPanelLayout.setVerticalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cancelPanel.setBackground(new java.awt.Color(229, 145, 214));
        cancelPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(179, 96, 164), 4));
        cancelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelPanel.setPreferredSize(new java.awt.Dimension(160, 60));
        cancelPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelPanelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cancelPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelPanelMouseReleased(evt);
            }
        });

        cancelSelectionButton.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        cancelSelectionButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelSelectionButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelSelectionButton.setText("Cancel Selection");
        cancelSelectionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelSelectionButton.setPreferredSize(new java.awt.Dimension(160, 60));

        javax.swing.GroupLayout cancelPanelLayout = new javax.swing.GroupLayout(cancelPanel);
        cancelPanel.setLayout(cancelPanelLayout);
        cancelPanelLayout.setHorizontalGroup(
            cancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cancelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cancelSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cancelPanelLayout.setVerticalGroup(
            cancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cancelPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        petPreviewText.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        petPreviewText.setForeground(new java.awt.Color(255, 255, 255));
        petPreviewText.setText("Pet Preview");

        jPanel1.setBackground(new java.awt.Color(229, 145, 214));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(179, 96, 164), 4));
        jPanel1.setPreferredSize(new java.awt.Dimension(476, 264));

        descriptionText.setBackground(new java.awt.Color(229, 145, 214));
        descriptionText.setColumns(20);
        descriptionText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        descriptionText.setForeground(new java.awt.Color(255, 255, 255));
        descriptionText.setLineWrap(true);
        descriptionText.setRows(5);
        descriptionText.setText("The pufferfish might look like it wouldn't be receptive to a cuddle, but so long as you  treat them right you'd be proven wrong.  These cuties love carrots! Be warned though! These charming animals tend to get sadder more quickly than the others. Fear not! So  long as you keep your pet happy with gifts, you won't get any spikes!");
        jScrollPane2.setViewportView(descriptionText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        previewImagePanel.setOpaque(false);

        javax.swing.GroupLayout previewImagePanelLayout = new javax.swing.GroupLayout(previewImagePanel);
        previewImagePanel.setLayout(previewImagePanelLayout);
        previewImagePanelLayout.setHorizontalGroup(
            previewImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewImagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(petPreviewImage, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );
        previewImagePanelLayout.setVerticalGroup(
            previewImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewImagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(petPreviewImage)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout borderLayout = new javax.swing.GroupLayout(border);
        border.setLayout(borderLayout);
        borderLayout.setHorizontalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, borderLayout.createSequentialGroup()
                .addGroup(borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(borderLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(borderLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(previewImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)))
                .addGroup(borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(borderLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(confirmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(256, 256, 256))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, borderLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
            .addGroup(borderLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(exitFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(413, 413, 413)
                .addComponent(petPreviewText)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        borderLayout.setVerticalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, borderLayout.createSequentialGroup()
                .addGroup(borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(borderLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(exitFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(borderLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(petPreviewText)))
                .addGap(118, 118, 118)
                .addGroup(borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previewImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addGroup(borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        getContentPane().add(border, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));
        getContentPane().add(backgroundEffects, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.png"))); // NOI18N
        background.setName("background"); // NOI18N
        background.setOpaque(true);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        setSize(new java.awt.Dimension(1280, 720));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMainMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMainMenuMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        mainMenuScreen nextScreen = new mainMenuScreen(manager);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                petPreviewScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_exitMainMenuMouseClicked

    private void confirmPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPanelMouseEntered
        confirmPanel.setBackground(new java.awt.Color(241,179,230));
    }//GEN-LAST:event_confirmPanelMouseEntered

    private void confirmPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPanelMouseExited
        confirmPanel.setBackground(new java.awt.Color(229,145,214));
    }//GEN-LAST:event_confirmPanelMouseExited

    private void confirmPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPanelMousePressed
        confirmPanel.setBackground(new java.awt.Color(179,96,164));
        //action
        // new nameChooseGUI(selectedPet).setVisible(true);
        // this.dispose();
    }//GEN-LAST:event_confirmPanelMousePressed

    private void confirmPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPanelMouseReleased
        confirmPanel.setBackground(new java.awt.Color(229,145,214));
    }//GEN-LAST:event_confirmPanelMouseReleased

    private void cancelPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPanelMouseEntered
        cancelPanel.setBackground(new java.awt.Color(241,179,230));
    }//GEN-LAST:event_cancelPanelMouseEntered

    private void cancelPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPanelMouseExited
        cancelPanel.setBackground(new java.awt.Color(229,145,214));
    }//GEN-LAST:event_cancelPanelMouseExited

    private void cancelPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPanelMousePressed
        cancelPanel.setBackground(new java.awt.Color(179,96,164));
    }//GEN-LAST:event_cancelPanelMousePressed

    private void cancelPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPanelMouseReleased
        cancelPanel.setBackground(new java.awt.Color(229,145,214));
    }//GEN-LAST:event_cancelPanelMouseReleased

    private void cancelPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPanelMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        petTypeScreen nextScreen = new petTypeScreen(manager, saveSlot);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                petPreviewScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_cancelPanelMouseClicked

    private void confirmPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPanelMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        petNameScreen nextScreen = new petNameScreen(manager, selectedPet, saveSlot);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                petPreviewScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_confirmPanelMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private forms.backgroundEffects backgroundEffects;
    private javax.swing.JPanel border;
    private javax.swing.JPanel cancelPanel;
    private javax.swing.JLabel cancelSelectionButton;
    private javax.swing.JPanel confirmPanel;
    private javax.swing.JLabel confirmSelectionButton;
    private javax.swing.JTextArea descriptionText;
    private javax.swing.JPanel exitFrame;
    private javax.swing.JLabel exitMainMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel petPreviewImage;
    private javax.swing.JLabel petPreviewText;
    private javax.swing.JPanel previewImagePanel;
    // End of variables declaration//GEN-END:variables
}
