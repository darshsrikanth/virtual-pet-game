
package forms;

import javax.swing.JSpinner;
import java.text.SimpleDateFormat;
import java.time.ZoneId;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.time.LocalTime;
import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.AbstractAction;
import java.awt.event.ActionEvent;
import classes.SoundManager;

import classes.saveManager;
import classes.parentalControls;


public class timeLimitsScreen extends javax.swing.JFrame {
    private saveManager manager;
    private parentalControls gameParentalControls;
    /**
     * Creates new form mainGameScreen
     */
    public timeLimitsScreen() {
        initComponents();
        JSpinner.DateEditor editor1 = new JSpinner.DateEditor(minTimeSpinner, "HH:mm");
        minTimeSpinner.setEditor(editor1);
        JSpinner.DateEditor editor2 = new JSpinner.DateEditor(maxTimeSpinner, "HH:mm");
        maxTimeSpinner.setEditor(editor2);
    }

    public timeLimitsScreen(saveManager manager) {
        initComponents();
        this.manager = manager;
        this.gameParentalControls = manager.PCReader();
        JSpinner.DateEditor editor1 = new JSpinner.DateEditor(minTimeSpinner, "HH:mm");
        minTimeSpinner.setEditor(editor1);
        JSpinner.DateEditor editor2 = new JSpinner.DateEditor(maxTimeSpinner, "HH:mm");
        maxTimeSpinner.setEditor(editor2);

        // Set values from save file.
        Date minDate = Date.from(gameParentalControls.getAllowedStart().atDate(java.time.LocalDate.of(2025, 03, 30)).atZone(ZoneId.systemDefault()).toInstant());
        Date maxDate = Date.from(gameParentalControls.getAllowedEnd().atDate(java.time.LocalDate.of(2025, 03, 30)).atZone(ZoneId.systemDefault()).toInstant());
        minTimeSpinner.setValue(minDate);
        maxTimeSpinner.setValue(maxDate);

        if (gameParentalControls.isRestrictionEnabled()) {
            enableTimeLimitButton.setText("Disable Time Limit");
        }
        else {
            enableTimeLimitButton.setText("Enable Time Limit");
        }

        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escapePressed");
        this.getRootPane().getActionMap().put("escapePressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                backButtonMouseClicked(null);
            }
        });

        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_S, 0), "setPressed");
        this.getRootPane().getActionMap().put("setPressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setTimeLimitButtonActionPerformed(null);
            }
        });

        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_E, 0), "enablePressed");
        this.getRootPane().getActionMap().put("enablePressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                enableTimeLimitButtonActionPerformed(null);
            }
        });
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        border = new javax.swing.JPanel();
        backPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JPanel();
        backButtonLabel = new javax.swing.JLabel();
        minTimeSpinner = new javax.swing.JSpinner();
        toLabel = new javax.swing.JLabel();
        maxTimeSpinner = new javax.swing.JSpinner();
        enableTimeLimitButton = new javax.swing.JButton();
        setTimeLimitButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("frame");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        border.setBackground(new java.awt.Color(204, 204, 204));
        border.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        border.setName("border"); // NOI18N
        border.setOpaque(false);

        backPanel.setBackground(new java.awt.Color(229, 145, 214));
        backPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(179, 96, 164), 4, true));
        backPanel.setPreferredSize(new java.awt.Dimension(1100, 550));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Time Limitations");

        backButton.setBackground(new java.awt.Color(255, 255, 255));
        backButton.setForeground(new java.awt.Color(229, 145, 214));
        backButton.setPreferredSize(new java.awt.Dimension(220, 47));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });

        backButtonLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backButtonLabel.setForeground(new java.awt.Color(229, 145, 214));
        backButtonLabel.setText("Back");

        javax.swing.GroupLayout backButtonLayout = new javax.swing.GroupLayout(backButton);
        backButton.setLayout(backButtonLayout);
        backButtonLayout.setHorizontalGroup(
            backButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backButtonLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(backButtonLabel)
                .addContainerGap(83, Short.MAX_VALUE))
        );
        backButtonLayout.setVerticalGroup(
            backButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backButtonLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(backButtonLabel)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        minTimeSpinner.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        minTimeSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1743220800000L), null, null, java.util.Calendar.HOUR_OF_DAY));
        minTimeSpinner.setPreferredSize(new java.awt.Dimension(230, 50));

        toLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        toLabel.setForeground(new java.awt.Color(255, 255, 255));
        toLabel.setText("to");

        maxTimeSpinner.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        maxTimeSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1743264000000L), null, null, java.util.Calendar.HOUR_OF_DAY));
        maxTimeSpinner.setToolTipText("");
        maxTimeSpinner.setPreferredSize(new java.awt.Dimension(230, 50));

        enableTimeLimitButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        enableTimeLimitButton.setForeground(new java.awt.Color(229, 145, 214));
        enableTimeLimitButton.setText("Enable Time Limit");
        enableTimeLimitButton.setPreferredSize(new java.awt.Dimension(276, 60));
        enableTimeLimitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableTimeLimitButtonActionPerformed(evt);
            }
        });

        setTimeLimitButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        setTimeLimitButton.setForeground(new java.awt.Color(229, 145, 214));
        setTimeLimitButton.setText("Set Time Limit");
        setTimeLimitButton.setPreferredSize(new java.awt.Dimension(276, 60));
        setTimeLimitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setTimeLimitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(jLabel1))
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(minTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(toLabel)
                        .addGap(30, 30, 30)
                        .addComponent(maxTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(setTimeLimitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enableTimeLimitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(406, 406, 406))
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toLabel)
                    .addComponent(maxTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(setTimeLimitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(enableTimeLimitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout borderLayout = new javax.swing.GroupLayout(border);
        border.setLayout(borderLayout);
        borderLayout.setHorizontalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        borderLayout.setVerticalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        getContentPane().add(border, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.png"))); // NOI18N
        background.setName("background"); // NOI18N
        background.setOpaque(true);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        setSize(new java.awt.Dimension(1280, 718));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        parentalControlsHomeScreen nextScreen = new parentalControlsHomeScreen(manager);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                timeLimitsScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_backButtonMouseClicked

    private void enableTimeLimitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableTimeLimitButtonActionPerformed
        SoundManager.playSound("sound/button_click.wav");
        if (gameParentalControls.isRestrictionEnabled()) {
            enableTimeLimitButton.setText("Enable Time Limit");
            gameParentalControls.toggleTimeRestriction(false);
            // save setting
            manager.PCMaker(gameParentalControls);
        }
        else {
            enableTimeLimitButton.setText("Disable Time Limit");
            gameParentalControls.toggleTimeRestriction(true);
            // save setting
            manager.PCMaker(gameParentalControls);
        }
    }//GEN-LAST:event_enableTimeLimitButtonActionPerformed

    private void setTimeLimitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setTimeLimitButtonActionPerformed
        SoundManager.playSound("sound/button_click.wav");
        Date minDate = (Date) minTimeSpinner.getValue();
        Date maxDate = (Date) maxTimeSpinner.getValue();
        LocalTime minTime = minDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
        LocalTime maxTime = maxDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
        gameParentalControls.setTimeRestriction(minTime, maxTime);
        // saves changes to parentalControls
        manager.PCMaker(gameParentalControls);
    }//GEN-LAST:event_setTimeLimitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backButton;
    private javax.swing.JLabel backButtonLabel;
    private javax.swing.JPanel backPanel;
    private javax.swing.JLabel background;
    private javax.swing.JPanel border;
    private javax.swing.JButton enableTimeLimitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner maxTimeSpinner;
    private javax.swing.JSpinner minTimeSpinner;
    private javax.swing.JButton setTimeLimitButton;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}
