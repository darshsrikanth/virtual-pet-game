
package forms;

import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.AbstractAction;
import java.awt.event.ActionEvent;
import java.util.Timer;
import java.util.TimerTask;

import classes.SoundManager;
import classes.saveManager;


public class parentalControlsHomeScreen extends javax.swing.JFrame {
    private saveManager manager;
    /**
     * Creates new form mainGameScreen
     */
    public parentalControlsHomeScreen() {
        initComponents();
    }

    public parentalControlsHomeScreen(saveManager manager) {
        initComponents();
        this.manager = manager;
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escapePressed");
        this.getRootPane().getActionMap().put("escapePressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                exitMainMenuMouseClicked(null);
            }
        });
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_1, 0), "petRevivePressed");
        this.getRootPane().getActionMap().put("petRevivePressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                petReviveButtonMouseClicked(null);
            }
        });
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_2, 0), "playerStatsPressed");
        this.getRootPane().getActionMap().put("playerStatsPressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                playerStatsButtonMouseClicked(null);
            }
        });
        
        this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_3, 0), "timeLimitsPressed");
        this.getRootPane().getActionMap().put("timeLimitsPressed", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timeLimitsButtonMouseClicked(null);
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        border = new javax.swing.JPanel();
        exitFrame = new javax.swing.JPanel();
        exitMainMenu = new javax.swing.JLabel();
        backPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        petReviveButton = new javax.swing.JPanel();
        petReviveLabel = new javax.swing.JLabel();
        playerStatsButton = new javax.swing.JPanel();
        playerStatsLabel = new javax.swing.JLabel();
        timeLimitsButton = new javax.swing.JPanel();
        timeLimitsLabel = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("frame");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        border.setBackground(new java.awt.Color(204, 204, 204));
        border.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        border.setName("border"); // NOI18N
        border.setOpaque(false);

        exitFrame.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));
        exitFrame.setPreferredSize(new java.awt.Dimension(72, 32));

        exitMainMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exitButton.png"))); // NOI18N
        exitMainMenu.setName("exitMainMenu"); // NOI18N
        exitMainMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMainMenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout exitFrameLayout = new javax.swing.GroupLayout(exitFrame);
        exitFrame.setLayout(exitFrameLayout);
        exitFrameLayout.setHorizontalGroup(
            exitFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitMainMenu)
        );
        exitFrameLayout.setVerticalGroup(
            exitFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitMainMenu)
        );

        backPanel.setBackground(new java.awt.Color(229, 145, 214));
        backPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(179, 96, 164), 4, true));
        backPanel.setPreferredSize(new java.awt.Dimension(1100, 550));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Parental Controls");

        petReviveButton.setBackground(new java.awt.Color(255, 255, 255));
        petReviveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        petReviveButton.setPreferredSize(new java.awt.Dimension(300, 200));
        petReviveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                petReviveButtonMouseClicked(evt);
            }
        });

        petReviveLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        petReviveLabel.setForeground(new java.awt.Color(229, 145, 214));
        petReviveLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        petReviveLabel.setText("Revive Pet");
        petReviveLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        petReviveLabel.setPreferredSize(new java.awt.Dimension(160, 60));

        javax.swing.GroupLayout petReviveButtonLayout = new javax.swing.GroupLayout(petReviveButton);
        petReviveButton.setLayout(petReviveButtonLayout);
        petReviveButtonLayout.setHorizontalGroup(
            petReviveButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(petReviveLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        petReviveButtonLayout.setVerticalGroup(
            petReviveButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(petReviveLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        playerStatsButton.setBackground(new java.awt.Color(255, 255, 255));
        playerStatsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playerStatsButton.setPreferredSize(new java.awt.Dimension(300, 200));
        playerStatsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playerStatsButtonMouseClicked(evt);
            }
        });

        playerStatsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        playerStatsLabel.setForeground(new java.awt.Color(229, 145, 214));
        playerStatsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerStatsLabel.setText("Player Statistics");
        playerStatsLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        playerStatsLabel.setPreferredSize(new java.awt.Dimension(160, 60));

        javax.swing.GroupLayout playerStatsButtonLayout = new javax.swing.GroupLayout(playerStatsButton);
        playerStatsButton.setLayout(playerStatsButtonLayout);
        playerStatsButtonLayout.setHorizontalGroup(
            playerStatsButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerStatsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        playerStatsButtonLayout.setVerticalGroup(
            playerStatsButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerStatsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        timeLimitsButton.setBackground(new java.awt.Color(255, 255, 255));
        timeLimitsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timeLimitsButton.setPreferredSize(new java.awt.Dimension(300, 200));
        timeLimitsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeLimitsButtonMouseClicked(evt);
            }
        });

        timeLimitsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        timeLimitsLabel.setForeground(new java.awt.Color(229, 145, 214));
        timeLimitsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLimitsLabel.setText("Time Limits");
        timeLimitsLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        timeLimitsLabel.setPreferredSize(new java.awt.Dimension(160, 60));

        javax.swing.GroupLayout timeLimitsButtonLayout = new javax.swing.GroupLayout(timeLimitsButton);
        timeLimitsButton.setLayout(timeLimitsButtonLayout);
        timeLimitsButtonLayout.setHorizontalGroup(
            timeLimitsButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timeLimitsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        timeLimitsButtonLayout.setVerticalGroup(
            timeLimitsButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timeLimitsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(backPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(petReviveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(playerStatsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(timeLimitsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(petReviveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerStatsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLimitsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout borderLayout = new javax.swing.GroupLayout(border);
        border.setLayout(borderLayout);
        borderLayout.setHorizontalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderLayout.createSequentialGroup()
                .addGroup(borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(borderLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(exitFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(borderLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        borderLayout.setVerticalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(exitFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        getContentPane().add(border, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.png"))); // NOI18N
        background.setName("background"); // NOI18N
        background.setOpaque(true);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        setSize(new java.awt.Dimension(1280, 718));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void exitMainMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMainMenuMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        mainMenuScreen nextScreen = new mainMenuScreen(manager);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                parentalControlsHomeScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_exitMainMenuMouseClicked

    private void petReviveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_petReviveButtonMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        petRevivalScreen nextScreen = new petRevivalScreen(manager);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                parentalControlsHomeScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_petReviveButtonMouseClicked

    private void playerStatsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerStatsButtonMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        playerStatsScreen nextScreen = new playerStatsScreen(manager);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                parentalControlsHomeScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_playerStatsButtonMouseClicked

    private void timeLimitsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeLimitsButtonMouseClicked
        SoundManager.playSound("sound/button_click.wav");
        timeLimitsScreen nextScreen = new timeLimitsScreen(manager);
        nextScreen.setVisible(true);
        Timer switchTimer = new Timer();
        TimerTask closeCurrent = new TimerTask() {
            @Override
            public void run() {
                parentalControlsHomeScreen.this.dispose();
                switchTimer.cancel();
            }
        };
        switchTimer.schedule(closeCurrent, 3000);
    }//GEN-LAST:event_timeLimitsButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backPanel;
    private javax.swing.JLabel background;
    private javax.swing.JPanel border;
    private javax.swing.JPanel exitFrame;
    private javax.swing.JLabel exitMainMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel petReviveButton;
    private javax.swing.JLabel petReviveLabel;
    private javax.swing.JPanel playerStatsButton;
    private javax.swing.JLabel playerStatsLabel;
    private javax.swing.JPanel timeLimitsButton;
    private javax.swing.JLabel timeLimitsLabel;
    // End of variables declaration//GEN-END:variables
}
