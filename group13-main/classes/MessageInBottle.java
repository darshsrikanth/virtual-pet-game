package classes;

/**
 * MessageInBottle gift item object to be given to the pet.
 * <br><br>
 * The MessageInBottle gift item is the mid-tier gift item available for the player to purchase, which is
 * reflected in its medium price. Its impact works differently than the other gift items, with a 50% chance of
 * pet happiness being incremented by 5 points, a 25% chance of 40 points and a 25% chance of -15 points.
 * This class inherits from the GiftItem class.
 *
 * @see GiftItem
 * @version 1.0
 * @author Cadence Megan McGillicuddy
 */
public class MessageInBottle extends GiftItem {
    /**
     * MessageInBottle constructor. Creates a new MessageInBottle object using the parent GiftItem's constructor.
     * The MessageInBottle object is initialized with happyEffective = 0, price = 50 and quantity = 0.
     * variable happyEffective is initialized as zero because with each use a different value is generated by
     * below method randEffective.
     */
    public MessageInBottle() {
        super(0,50,0);
    }

    /**
     * Calls the randEffective method to retrieve the increment by which the pet's happiness is affected when
     * the item is used.
     *
     * @return an integer representing the amount by which to increment the pet happiness.
     */
    @Override
    public int getHappyEffective() {
        randEffective(); // calling the helper method randEffective to randomly choose the happiness increment the use of the item causes
        return this.happyEffective;
    }

    /**
     * A helper method to randomly generate the increment by which the pet happiness should be increased when this
     * gift item is used. This method is called each time the happiness increment is retrieved from the MessageInBottle
     * object.
     */
    private void randEffective() {
        double randEffect = Math.random(); // generating a random double between 0.0 and 1.0
        if (randEffect < 0.50) { // 50% chance of a 5 point effectiveness
            this.happyEffective = 5;
        } else if (randEffect < 0.75) { // 25% chance of a 40 point effectiveness
            this.happyEffective = 40;
        } else { // 25% chance of a -15 point effectiveness
            this.happyEffective = -15;
        }
    }

}
